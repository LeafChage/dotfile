[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]] # 非同期処理用のプラグイン
repo = 'Shougo/vimproc'
build = 'make'

[[plugins]]
repo = 'Shougo/vimshell'

[[plugins]]
repo = 'osyo-manga/vim-watchdogs'

[[plugins]] #footer
repo = 'itchyny/lightline.vim'

#
#  補完 {
#
[[plugins]]
repo = 'Shougo/neco-syntax'

[[plugins]]
repo = 'ujihisa/neco-look'

[[plugins]]
repo = 'roxma/nvim-yarp'

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = ['ujihisa/neco-look', 'Shougo/neco-syntax']
hook_add = '''
      let g:deoplete#enable_at_startup = 1
'''
#
#  } 補完
#

[[plugins]] # 構文エラーチェック
repo = 'scrooloose/syntastic'
hook_add = '''
      let g:syntastic_enable_signs = 1
      let g:syntastic_always_populate_loc_list = 1
      let g:syntastic_check_on_open = 1
'''

[[plugins]] # スクリプト実行 Ctrl-r
repo = 'thinca/vim-quickrun'
hook_add = """
      nnoremap <silent> <C-r> :QuickRun<CR>
      let g:quickrun_config = {
            \'_': {
            \      'split': 'vertical',
            \},
            \'rust': {
            \      'exec' : 'cargo run'
            \},
            \'nim': {
                  \ 'command': 'nim',
                  \ 'cmdopt': 'compile --run --verbosity:0',
                  \ 'hook/sweep/files': '%S:p:r',
                  \ 'tempfile': '%{substitute(tempname(), ''\(\d\+\)$'', ''nim\1.nim'', '''')',
            \},
      \}

      set splitright
"""

[[plugins]] # htmlのマッチしている先を教えてくれる
repo = 'valloric/matchtagalways'
on_ft = 'html'
on_ft = 'php'
hook_souce = '''
      let g:mta_use_matchparen_group = 1
      let g:mta_filetypes = { 'html' : 1, 'php' : ,1 }
'''

[[plugins]] # 複数行のコメントアウト ctrl+k
repo = 'tyru/caw.vim.git'
hook_add = '''
      nmap <C-K> <Plug>(caw:i:toggle)
      vmap <C-K> <Plug>(caw:i:toggle)
'''

[[plugins]] # カーソル下のハイライトをトグルする space+mで検索
repo = 't9md/vim-quickhl'
hook_add = '''
      map <Space>m <Plug>(quickhl-manual-this)
      map <Space>M <Plug>(quickhl-manual-reset)
'''


[[plugins]] # indent
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
      let g:indent_guides_start_level=2
      let g:indent_guides_enable_on_vim_startup = 1
      let g:indent_guides_guide_size = 1
      let g:indent_guides_auto_colors = 0
      autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  ctermbg=235
      autocmd VimEnter,Colorscheme * :hi IndentGuidesEven ctermbg=235
'''

[[plugins]] # テキスト整形 visualモードで ga
repo = 'junegunn/vim-easy-align'
hook_add = '''
      xmap ga <Plug>(EasyAlign)
      nmap ga <Plug>(EasyAlign)
'''

[[plugins]] #ファイル構造
repo = 'scrooloose/nerdtree'
hook_add = '''
      let NERDTreeShowHidden=1
      let g:NERDTreeDirArrows = 1
      map <silent> <C-n> :NERDTreeToggle<CR>
'''

[[plugins]] #color確認
repo = 'gko/vim-coloresque'

[[plugins]] #画面サイズを編集 ctrl+e
repo = 'simeji/winresizer'

[[plugins]] # lisp vlime
repo = 'l04m33/vlime'
rtp = 'vim/'
on_ft = 'lisp'

[[plugins]] # lisp
repo = 'vim-scripts/paredit.vim'
on_ft = 'lisp'

[[plugins]] # rust
repo = 'rust-lang/rust.vim'
on_ft = 'rs'

[[plugins]] # go
repo = 'fatih/vim-go'
on_ft = 'go'

[[plugins]] # elixir
repo = 'elixir-editors/vim-elixir'
on_ft = 'ex'

[[plugins]] # haskell
repo = 'kana/vim-filetype-haskell'
on_ft = 'hs'

[[plugins]] # nim
repo = 'zah/nim.vim'
on_ft = 'nim'

[[plugins]] # toml
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]] # カラースキーマ
repo = 'w0ng/vim-hybrid'

[[plugins]] # カラースキーマ
repo = 'nanotech/jellybeans.vim'

[[plugins]] # カラースキーマ
repo = 'w0ng/vim-hybrid'

[[plugins]] # カラースキーマ
repo = 'cocopon/iceberg.vim'

[[plugins]] # カラースキーマ
repo = 'christophermca/meta5'

[[plugins]] # カラースキーマ
repo = 'dracula/vim'


